#include "HexExporter.h"
#include "HexBlocker.h"
#include <iostream>
#include <QFile>
#include <QTextStream>

HexExporter::HexExporter()
{
}

HexExporter::HexExporter(HexBlocker *HB)
{
    hexB = HB;
}

void HexExporter::exporBlockMeshDict(QString filename)
{
    QFile file(filename);
    std::cout <<"exporting"<<std::endl;

    //error handling?
    file.open(QIODevice::WriteOnly | QIODevice::Text);
    QTextStream out(&file);

    out << "/*--------------------------------*- C++ -*----------------------------------*\\ "<<endl
        << "|             BlockMeshDict generated by hexblocker                           | "<<endl
        << "\\*---------------------------------------------------------------------------*/ "<<endl
        << "FoamFile " << endl
        << "{" << endl
        << "\t version \t 2.0;" <<endl
        << "\t format \t ascii;" <<endl
        << "\t class \t\t dictionary; " <<endl
        << "\t object \t blockMeshDict; " << endl
        << "}" << endl;

    out << "convertToMeters 1;" << endl;



    hexB->exportVertices(out);

    hexB->exportBlocks(out);

    out << "edges" << endl << "(" << endl<< ");" << endl;

    hexB->exportBCs(out);


    file.close();

}
